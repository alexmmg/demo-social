{"version":3,"sources":["utils/object-helpers.js","redux/usersReducer.js","components/Profile/Profile.module.css","assets/images/loader.gif","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/Dialogs.module.css","components/Navbar/Friends/Friend/FriendItem.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","redux/profileReducer.js","redux/dialogsReducer.js","redux/sidebarReducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Friends/Friend/FriendItem.jsx","components/Navbar/Friends/Friends.jsx","components/Navbar/Friends/FriendsContainer.jsx","components/Navbar/Navbar.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","utils/validators/validators.js","components/common/FormsControls/FormsControls.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","hoc/withAuthRedirect.js","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","App.js","serviceWorker.js","index.js","components/common/FormsControls/FormsControl.module.css","components/common/Preloader/Preloader.jsx","components/Navbar/Navbar.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","assets/images/user.png","api/api.js"],"names":["updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","follow","userId","type","unfollow","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","dispatch","a","userAPI","getUsers","data","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","followUser","bind","unfollowUser","usersReducer","state","action","followed","filter","id","module","exports","posts","title","src","likesCount","newPostText","profile","status","setUserProfile","setStatus","getProfile","response","profileReducer","newPost","photos","dialogs","name","messages","message","dialogsReducer","newMessage","messageInput","friends","sidebarReducer","email","login","isAuth","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getMyAccount","authAPI","getCaptchaUrl","securityAPI","url","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogPage","sidebar","usersPage","auth","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","FriendItem","props","Friends","friend","el","key","FriendsContainer","connect","Navbar","className","s","nav","item","to","activeClassName","activeLink","getState","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","required","maxLengthCreator","maxLength","length","Textarea","input","meta","hasError","touched","error","formControl","Input","createField","placeholder","validators","component","text","validate","ProfileDataFormReduxForm","reduxForm","enableReinitialize","handleSubmit","onSubmit","formSummaryError","Object","keys","contacts","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","avatar","large","userPhoto","target","files","formData","then","initialValues","Post","MyPosts","React","memo","post","postsBlock","PostReduxForm","addPost","maxLength30","reset","MyPostsContainer","addPostActionCreator","Profile","content","mapStateToPropsForRedirect","withAuthRedirect","Component","RedirectComponent","this","ProfileContainer","match","params","authorizedUserId","history","push","getStatus","refreshProfile","prevProps","prevState","snapshot","withRouter","profileAPI","file","stopSubmit","_error","Promise","reject","Header","header","alt","loginBlock","logout","HeaderContainer","password","rememberMe","LoginReduxForm","captcha","DialogItem","dialog","active","Message","maxLength100","DialogReduxForm","Dialogs","dialogsItems","values","addMessage","newMessageText","addMessageActionCreator","UsersContainer","lazy","App","initializeApp","path","render","DialogsContainer","fallback","AppContainer","promise","all","SocialNetworkApp","basename","process","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","preloader","instance","axios","withCredentials","baseURL","headers","get","delete","warn","put","photoFile","FormData","append"],"mappings":"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","file":"static/js/main.178fd971.chunk.js","sourcesContent":["export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n    return items.map(u => {\n        if (u[objPropName] === itemId) {\n            return {...u, ...newObjProps}\n        }\n        return u;\n    })\n};","import {userAPI} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\n\nlet initialState = {\n    users: [],\n    pageSize: 5,\n    totalUsersCount: 21,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW: {\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\n                // users: state.users.map(u => {\n                //     if (u.id === action.userId) {\n                //         return {...u, followed: true}\n                //     }\n                //     return u;\n                // })\n            }\n        }\n        case UNFOLLOW: {\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\n                // users: state.users.map(u => {\n                //     if (u.id === action.userId) {\n                //         return {...u, followed: false}\n                //     }\n                //     return u;\n                // })\n            }\n        }\n        case SET_USERS: {\n            return {...state, users: action.users}\n        }\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {...state, totalUsersCount: action.totalUsersCount}\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n};\n\nexport let follow = (userId) => ({type: FOLLOW, userId});\nexport let unfollow = (userId) => ({type: UNFOLLOW, userId});\nexport let setUsers = (users) => ({type: SET_USERS, users});\nexport let setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\nexport let setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\nexport let toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\nexport let toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId});\n\nexport const requestUsers = (currentPage, pageSize) => async (dispatch) => {\n    dispatch(toggleIsFetching(true));\n    let data = await userAPI.getUsers(currentPage, pageSize);\n    dispatch(toggleIsFetching(false));\n    dispatch(setUsers(data.items));\n    dispatch(setTotalUsersCount(data.totalCount));\n    dispatch(setCurrentPage(currentPage))\n};\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await apiMethod(userId);\n    if (response.data.resultCode === 0) {\n        dispatch(actionCreator(userId))\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n};\n\nexport const followUser = (userId) => async (dispatch) => {\n    debugger;\n    followUnfollowFlow(dispatch, userId, userAPI.followUser.bind(userAPI), follow);\n};\n\nexport const unfollowUser = (userId) => async (dispatch) => {\n    debugger;\n    followUnfollowFlow(dispatch, userId, userAPI.unfollowUser.bind(userAPI), unfollow);\n};\n\nexport default usersReducer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Profile_avatar__aV4u5\"};","module.exports = __webpack_public_path__ + \"static/media/loader.65ebb302.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"FriendItem_postsBlock__roxGR\",\"posts\":\"FriendItem_posts__1PbPX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\",\"avatar\":\"ProfileInfo_avatar__3xuFq\",\"fullName\":\"ProfileInfo_fullName__2p--3\",\"aboutMe\":\"ProfileInfo_aboutMe__1mww3\",\"contact\":\"ProfileInfo_contact__1N3gp\",\"formSummaryError\":\"ProfileInfo_formSummaryError__3Pphw\"};","import {profileAPI, userAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\n\n\nlet initialState = {\n    posts: [\n        {\n            title: \"His new car\",\n            src: \"https://s3.tproger.ru/uploads/2020/05/IMG_8715-50x50.png\",\n            likesCount: '23'\n        },\n        {\n            title: \"I've bought a house\",\n            src: \"https://s3.tproger.ru/uploads/2020/05/unnamed-50x50.jpg\",\n            likesCount: '12'\n        },\n        {\n            title: \"Green socks\",\n            src: \"https://s3.tproger.ru/uploads/2020/04/1_tilda1502215-50x50.jpg\",\n            likesCount: '2'\n        },\n        {\n            title: \"It's my life\",\n            src: \"https://s3.tproger.ru/uploads/2020/04/MyOffice_Logo_tilda1424002-50x50.png\",\n            likesCount: '33'\n        },\n    ],\n    newPostText: \"\",\n    profile: null,\n    status: \"\"\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                title: action.newPostText,\n                src: \"https://s3.tproger.ru/uploads/2020/05/IMG_8715-50x50.png\",\n                likesCount: '0'\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n                newPostText: ''\n            }\n        }\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        case SET_USER_PROFILE: {\n            return {...state, profile: action.profile}\n        }\n        case SAVE_PHOTO_SUCCESS: {\n            return {...state, profile: {...state.profile, photos: action.photos}}\n        }\n        default:\n            return state;\n    }\n};\n\nexport let addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\nexport let setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\nexport let setStatus = (status) => ({type: SET_STATUS, status});\nexport let savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\n\n\nexport const getProfile = (userId) => async (dispatch) => {\n    let response = await userAPI.getProfile(userId);\n    dispatch(setUserProfile(response.data));\n};\n\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId);\n    dispatch(setStatus(response.data));\n};\n\nexport const updateStatus = (status) => async (dispatch) => {\n    let response = await profileAPI.updateStatus(status);\n    if (response.data.resultCode === 0) {\n        dispatch(setStatus(status));\n    }\n};\n\nexport const savePhoto = (file) => async (dispatch) => {\n    let response = await profileAPI.savePhoto(file);\n    if (response.data.resultCode === 0) {\n        dispatch(savePhotoSuccess(response.data.data.photos));\n    }\n};\n\nexport const saveProfile = (profile) => async (dispatch, getState) => {\n    const userId = getState().auth.id;\n    let response = await profileAPI.saveProfile(profile);\n    if (response.data.resultCode === 0) {\n        dispatch(getProfile(userId));\n    }\n    else {\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}));\n        return Promise.reject(response.data.messages[0])\n    }\n};\n\n\nexport default profileReducer;\n","const ADD_MESSAGE = 'ADD-MESSAGE';\n\nlet initialState = {\n    dialogs: [\n        {name: 'Mariya', id: '1'},\n        {name: 'Sanya', id: '2'},\n        {name: 'Petya', id: '3'},\n        {name: 'John', id: '4'}\n    ],\n    messages: [\n        {id: '1', message: 'Hello'},\n        {id: '2', message: 'How are you?'},\n        {id: '3', message: 'My friend is...'}\n    ],\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n        switch (action.type) {\n            case ADD_MESSAGE: {\n                let newMessage = {\n                    id: '5',\n                    message: action.messageInput\n                };\n                return {\n                    ...state,\n                    messages: [...state.messages, newMessage]\n                }\n            }\n            default:\n                return state;\n        }\n    }\n;\n\nexport let addMessageActionCreator = (messageInput) => ({type: ADD_MESSAGE, messageInput});\n\nexport default dialogsReducer;","let initialState = {\n    friends: [\n        {name: \"Vasja\", src: \"https://s3.tproger.ru/uploads/2020/05/IMG_8715-50x50.png\", id: 1},\n        {name: \"Petia\", src: \"https://s3.tproger.ru/uploads/2020/05/IMG_8715-50x50.png\", id: 2},\n        {name: \"Kolia\", src: \"https://s3.tproger.ru/uploads/2020/05/IMG_8715-50x50.png\", id: 3},\n    ],\n};\n\nconst sidebarReducer = (state = initialState, action) => {\n\n    return state;\n};\n\n\nexport default sidebarReducer;","import {authAPI, securityAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\nconst GET_CAPTCHA_URL_SUCCESS = 'auth/GET_CAPTCHA_URL_SUCCESS';\n\n\nlet initialState = {\n    id: null,\n    email: null,\n    login: null,\n    isFetching: false,\n    isAuth: false,\n    captchaUrl: null // if null, captcha is not required\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n        case GET_CAPTCHA_URL_SUCCESS: {\n            return {\n                ...state,\n                ...action.payload\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport const setAuthUserData = (id, email, login, isAuth) => ({\n    type: SET_USER_DATA,\n    payload: {id, email, login, isAuth}\n});\n\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\n    type: GET_CAPTCHA_URL_SUCCESS,\n    payload: {captchaUrl}\n});\n\nexport const getMyAccount = () => async (dispatch) => {\n    let response = await authAPI.getMyAccount();\n    if (response.data.resultCode === 0) {\n        let {id, email, login} = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n};\n\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe, captcha);\n    if (response.data.resultCode === 0) {\n        // success, get auth data\n        dispatch(getMyAccount());\n    } else {\n        if (response.data.resultCode === 10) {\n            dispatch(getCaptchaUrl())\n        }\n\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n        dispatch(stopSubmit(\"login\", {_error: message}));\n    }\n};\n\nexport const getCaptchaUrl = () => async (dispatch) => {\n    const response = await securityAPI.getCaptchaUrl();\n    const captchaUrl = response.data.url;\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\n};\n\nexport const logout = (email, password, rememberMe) => async (dispatch) => {\n    let response = await authAPI.logout(email, password, rememberMe);\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n    }\n};\n\nexport default authReducer;\n","import {authAPI, userAPI} from \"../api/api\";\nimport {setUserProfile} from \"./profileReducer\";\nimport {stopSubmit} from \"redux-form\";\nimport {getMyAccount} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\n\nlet initialState = {\n    initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS: {\n            return {\n                ...state,\n                initialized: true\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getMyAccount());\n    Promise.all([promise])\n        .then(() => {\n        dispatch(initializedSuccess());\n    })\n};\n\n\nexport default appReducer;\n","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\nimport profileReducer from \"./profileReducer\";\nimport dialogsReducer from \"./dialogsReducer\";\nimport sidebarReducer from \"./sidebarReducer\";\nimport usersReducer from \"./usersReducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from 'redux-thunk';\nimport { reducer as formReducer } from 'redux-form'\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogPage: dialogsReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\nwindow.store = store;\n\nexport default store;\n","import React from \"react\";\nimport s from \"./FriendItem.module.css\"\n// import Post from \"./Post/Post\"\n// import postsData from \"./../Profile\"\n\n\nconst FriendItem = (props) => {\n    return (\n        <div>\n            <img src={props.src}/>\n            <div>\n               {props.name}\n            </div>\n        </div>\n    )\n};\n\nexport default FriendItem;\n","import React from \"react\";\nimport FriendItem from \"./Friend/FriendItem\";\n\n\nconst Friends = (props) => {\n    let friend = props.friends.map((el) => (<FriendItem key={el.id} src={el.src} name={el.name}/>));\n\n    return (\n        <div>\n            <h3>Friends</h3>\n            <div>\n                {friend}\n            </div>\n        </div>\n    )\n};\n\nexport default Friends;\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport Friends from \"./Friends\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n\n    }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n};\n\nconst FriendsContainer = connect(mapStateToProps, mapDispatchToProps)(Friends);\n\nexport default FriendsContainer;\n","import React from \"react\";\nimport s from \"./Navbar.module.css\";\nimport {NavLink} from \"react-router-dom\";\nimport FriendsContainer from \"./Friends/FriendsContainer\";\n\n\nconst Navbar = (props) => {\n    return (\n        <div>\n            <nav className={s.nav}>\n                <div className={s.item}>\n                    <NavLink to=\"/profile\" activeClassName={s.activeLink} className={s.item}>Profile</NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to='/dialogs' activeClassName={s.activeLink} className={s.item}>Messages</NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to='/news' activeClassName={s.activeLink} className={s.item}>News</NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to='/users' activeClassName={s.activeLink} className={s.item}>Users</NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to='/music' activeClassName={s.activeLink} className={s.item}>Music</NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to='/settings' activeClassName={s.activeLink} className={s.item}>Settings</NavLink>\n                </div>\n                <FriendsContainer friends = {props.store.getState().sidebar.friends} />\n            </nav>\n        </div>\n    )\n};\n\nexport default Navbar;","import React, {useEffect, useState} from \"react\";\nimport s from \"./ProfileStatus.module.css\"\n\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect( () => {\n        setStatus(props.status)\n    },  [props.status]);\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    };\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    };\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    };\n\n    return (\n        <div>\n\n            {!editMode &&\n                <div>\n                    <b>Status:{\" \"}</b>\n                    <span onDoubleClick={activateEditMode}>{props.status || \"-----------\"}</span>\n                </div>\n            }\n            {editMode &&\n            <div>\n                <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}/>\n            </div>\n                }\n        </div>\n    )\n};\n\nexport default ProfileStatusWithHooks;\n","export const required = value => {\n    if (value) return undefined;\n\n    return 'Field is required';\n};\n\nexport const maxLengthCreator = (maxLength) => value => {\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n};\n","import React from \"react\";\nimport s from \"./FormsControl.module.css\"\nimport {required} from \"../../../utils/validators/validators\";\nimport Field from \"redux-form/lib/Field\";\n\nexport const Textarea = ({input, meta, ...props}) => {\n\n    const hasError = meta.touched && meta.error;\n\n    return (\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\n            <div>\n                <textarea {...input} {...props}/>\n            </div>\n            {hasError && <span>{meta.error}</span>}\n        </div>\n\n    )\n};\n\nexport const Input = ({input, meta, ...props}) => {\n\n    const hasError = meta.touched && meta.error;\n\n    return (\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\n            <div>\n                <input {...input} {...props}/>\n            </div>\n            {hasError && <span>{meta.error}</span>}\n        </div>\n\n    )\n};\n\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => {\n    return <div>\n        <Field placeholder={placeholder} name={name} component={component} validate={validators} {...props}/>\n        {text}\n    </div>\n};","import React from \"react\";\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\nimport reduxForm from \"redux-form/lib/immutable/reduxForm\";\nimport s from \"./ProfileInfo.module.css\"\n\n\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\n\n    // console.log(initialValues);\n\n    return <form onSubmit={handleSubmit}>\n        <div>\n            <button>save</button>\n        </div>\n        {error && <div className={s.formSummaryError}>\n            {error}\n        </div>}\n        <div>\n            <span><b>Full name:</b></span> {createField(\"Full name\", \"fullName\", [], Input)}\n        </div>\n        <div>\n            <div>\n                <b>Looking for a job:</b>\n                {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\n            </div>\n            <div>\n                <b>My professional skills:</b>\n                {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\n            </div>\n            <div>\n                <b>About me:</b>\n                {createField(\"About me\", \"aboutMe\", [], Textarea)}\n            </div>\n            <div>\n                <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\n                return <div className={s.contact}>\n                    <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\n                </div>\n            })}\n            </div>\n        </div>\n\n    </form>\n};\n\n\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile', enableReinitialize : true})(ProfileDataForm);\n\n\nexport default ProfileDataFormReduxForm;","import React, {useState} from \"react\";\nimport s from \"./ProfileInfo.module.css\"\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport userPhoto from './../../../assets/images/user.png'\nimport ProfileDataFormReduxForm from \"./ProfileDataForm\";\nimport ProfileDataForm from \"./ProfileDataForm\";\n\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\n\n    let [editMode, setEditMode] = useState(false);\n\n    if (!profile) {\n        return <Preloader/>\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0])\n        }\n    };\n\n    const onSubmit = (formData) => {\n        saveProfile(formData).then(() => {\n            setEditMode(false);\n        });\n    };\n\n    // const initialValues = {aboutMe:\"Sasha111\",\n    //     contacts:{facebook:null, website:null,vk: \"www.vk.com\",twitter:null,instagram:null,youtube:null,github:null,mainLink:null},\n    //     lookingForAJob:false,\n    //     lookingForAJobDescription:\"poiuy\",\n    //     fullName:\"m,nbv\",\n    //     userId:8704,\n    //     photos:{small: null,\n    //         large: null}};\n\n    return (\n        <div>\n            <div className={s.descriptionBlock}>\n                <img className={s.avatar} src={profile.photos.large || userPhoto}/>\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\n\n            </div>\n\n            {editMode\n\n                ? <ProfileDataFormReduxForm profile={profile} onSubmit={onSubmit} initialValues={profile}/>\n                : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => {\n                    setEditMode(true)\n                }}/>}\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n        </div>\n    )\n};\n\n\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\n    return <div>\n        {isOwner && <div>\n            <button onClick={goToEditMode}>edit</button>\n        </div>}\n        <div className={s.fullName}>\n            <span><b>Full name: </b>{profile.fullName}</span>\n        </div>\n        <div>\n            <div>\n                <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\n            </div>\n            {profile.lookingForAJob &&\n            <div>\n                <b>My professional skills:</b> {profile.lookingForAJobDescription}\n            </div>\n            }\n            <div>\n                <b>About me:</b> {profile.aboutMe}\n            </div>\n            <div>\n                <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\n            })}\n            </div>\n\n        </div>\n\n    </div>\n};\n\nconst Contact = ({contactTitle, contactValue}) => {\n    return <div className={s.contact}><b>{contactTitle}:</b> {contactValue}</div>\n};\n\nexport default ProfileInfo;\n","import React from \"react\";\nimport s from \"./Post.module.css\"\n\nconst Post = (props) => {\n    return (\n        <div className={s.item}>\n            <img src={props.src}/>\n            {props.title}\n            <div>\n                Лайки: {props.likesCount}\n            </div>\n        </div>\n    )\n};\n\nexport default Post;\n","import React from \"react\";\nimport s from \"./MyPosts.module.css\"\nimport Post from \"./Post/Post\"\nimport reduxForm from \"redux-form/lib/immutable/reduxForm\";\nimport Field from \"redux-form/lib/Field\";\nimport {maxLengthCreator} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\n\nconst MyPosts = React.memo( (props) => {\n\n    let post = props.posts.map((el) => (<Post key={el.id} title={el.title} src={el.src} likesCount={el.likesCount}/>));\n\n    let addPost = (value) => {\n        props.addPost(value.newPostText);\n    };\n\n    return (\n\n        <div className={s.postsBlock}>\n            <h3>My post</h3>\n            <PostReduxForm onSubmit={addPost} />\n            <div className={s.posts}>\n                {post}\n            </div>\n        </div>\n    )\n});\n\nlet maxLength30 = maxLengthCreator(30);\n\nconst PostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea} type=\"text\" placeholder={\"Post message\"} name={\"newPostText\"} validate={[ maxLength30 ]} />\n            </div>\n            <div>\n                <button onChange={props.reset}>Add post</button>\n            </div>\n        </form>\n    )\n};\n\nconst PostReduxForm = reduxForm({form: 'post'})(PostForm);\n\nexport default MyPosts;\n","import React from \"react\";\nimport {addPostActionCreator} from \"../../../redux/profileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        }\n    }\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","import React from \"react\";\nimport s from \"./Profile.module.css\"\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\n\nconst Profile = (props) => {\n    return (\n        <div className={s.content}>\n            <ProfileInfo isOwner={props.isOwner} profile={props.profile} getProfile={props.getProfile} status={props.status}\n                         updateStatus={props.updateStatus} savePhoto={props.savePhoto} saveProfile={props.saveProfile}/>\n            <MyPostsContainer store={props.store} />\n        </div>\n    )\n};\n\n\nexport default Profile;\n\n","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {getProfile, setUserProfile} from \"../redux/profileReducer\";\nimport connect from \"react-redux/lib/connect/connect\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>;\n            return <Component {...this.props} />\n        }\n    }\n\n    let connectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n    return connectedAuthRedirectComponent;\n};","import React from \"react\";\nimport Profile from \"./Profile\";\nimport connect from \"react-redux/lib/connect/connect\";\nimport {getStatus, savePhoto, saveProfile, setUserProfile, updateStatus} from \"../../redux/profileReducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {getProfile} from \"../../redux/profileReducer\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push(\"./login\");\n            }\n        }\n        this.props.getProfile(userId); // санка\n        this.props.getStatus(userId); // санка\n    }\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\n            this.refreshProfile();\n        }\n    }\n\n    render() {\n        return (\n            <Profile {...this.props} profile={this.props.profile} getProfile={this.props.getProfile}\n                     isAuth={this.props.isAuth} status={this.props.status} updateStatus={this.props.updateStatus}\n                     isOwner={!this.props.match.params.userId} savePhoto={this.props.savePhoto} saveProfile={this.props.saveProfile}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.id,\n    isAuth: state.auth.isAuth\n});\n\nexport default compose(\n    withRouter,\n    withAuthRedirect,\n    connect(mapStateToProps, {setUserProfile, getProfile, getStatus, updateStatus, savePhoto, saveProfile})\n)(ProfileContainer);\n","import React from \"react\";\nimport s from \"./Header.module.css\"\nimport {NavLink} from \"react-router-dom\";\n\nconst Header = (props) => {\n    return (\n        <header className={s.header}>\n            <img alt=\"Company Logo\" src='https://upload.wikimedia.org/wikipedia/commons/2/29/HP_New_Logo_2D.svg'/>\n            <div className={s.loginBlock}>\n                {props.isAuth\n                    ? <div>{props.login}<button onClick={props.logout}>Log out</button></div>\n                    : <NavLink to={'/login'}>Login</NavLink>}\n            </div>\n        </header>\n    )\n};\n\nexport default Header;","import React from \"react\";\nimport {setAuthUserData, logout} from \"../../redux/auth-reducer\";\nimport Header from \"./Header\";\nimport connect from \"react-redux/lib/connect/connect\";\n\n\n\nclass HeaderContainer extends React.Component {\n    // componentDidMount() {\n    //     this.props.getMyAccount();\n    // };\n\n\n    render() {\n        return <Header {...this.props}/>\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n});\n\nexport default connect(mapStateToProps, {setAuthUserData, logout})(HeaderContainer);\n","import React from \"react\";\nimport reduxForm from \"redux-form/lib/immutable/reduxForm\";\nimport Field from \"redux-form/lib/Field\";\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport connect from \"react-redux/lib/connect/connect\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport s from \"./../common/FormsControls/FormsControl.module.css\"\n\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <Field placeholder={\"email\"} name={\"email\"} component={Input} validate={[required]}/>\n            </div>\n            <div>\n                <Field placeholder={\"Password\"} name={\"password\"} component={Input} validate={[required]}\n                       type={\"password\"}/>\n            </div>\n            <div>\n                <Field type=\"checkbox\" name={\"rememberMe\"} component={Input} />\n            </div>\n\n            {captchaUrl && <img alt=\"captcha\" src={captchaUrl}/>}\n            {captchaUrl && createField(\"Symbols from image\", \"captcha\", [required], Input, {})}\n\n            {error && <div className={s.formSummaryError}>\n                {error}\n            </div>}\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n};\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\n\n\nconst Login = (props) => {\n\n    const sendAuthData = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n    };\n\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"} />\n    }\n\n    return <div>\n        <h1> Login </h1>\n        <LoginReduxForm onSubmit={sendAuthData} captchaUrl={props.captchaUrl}/>\n    </div>\n};\n\n\nconst mapStateToProps = (state) => ({\n    captchaUrl: state.auth.captchaUrl,\n    isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, {login})(Login);","import React from \"react\";\nimport s from \"./../Dialogs.module.css\";\nimport {NavLink} from 'react-router-dom';\n\nconst DialogItem = (props) => {\n    return (<div className={ s.dialog + \" \" + s.active }>\n                <NavLink to = { \"/dialogs/\" + props.id }>{props.name}</NavLink>\n            </div>)\n};\n\nexport default DialogItem;","import React from \"react\";\nimport s from \"./../Dialogs.module.css\";\n\n\n\nconst Message = (props) => {\n    return (<div className={s.message}>\n                {props.text}\n            </div>)\n};\n\nexport default Message;","import React from \"react\";\nimport s from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport reduxForm from \"redux-form/lib/immutable/reduxForm\";\nimport Field from \"redux-form/lib/Field\";\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\n\n\nconst Dialogs = (props) => {\n\n    let dialogs = props.state.dialogs.map((dialog) => (<DialogItem key={dialog.id} name={dialog.name} id={dialog.id}/>));\n    let message = props.state.messages.map((message) => (<Message key={message.id} text={message.message}/>));\n\n    let addNewMessage = (values) => {\n        props.addMessage(values.messageInput);\n    };\n\n    return (\n        <div>\n            <div className={s.dialogs}>\n                <div className={s.dialogsItems}>\n                    {dialogs}\n                </div>\n                <div className={s.messages}>\n                    {message}\n                </div>\n            </div>\n\n            <DialogReduxForm onSubmit={addNewMessage} />\n        </div>\n    )\n};\n\nconst maxLength100 = maxLengthCreator(100);\n\nconst DialogForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea} validate={[required, maxLength100]} placeholder=\"Enter your message\" name={\"messageInput\"} />\n            </div>\n            <div>\n                <button>Write Message</button>\n            </div>\n        </form>\n    )\n};\n\n\nconst DialogReduxForm = reduxForm({form: 'message'})(DialogForm);\n\nexport default Dialogs;","import React from \"react\";\nimport {addMessageActionCreator} from \"../../redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\n// const DialogsContainer = (props) => {\n//     debugger\n//\n//     let state = props.store.getState().dialogPage;\n//\n//     let onAddMessageClick = () => {\n//         props.store.dispatch(addMessageActionCreator());\n//     };\n//\n//     let onMessageChange = (text) => {\n//         props.store.dispatch(updateNewMessageTextActionCreator(text));\n//     };\n//\n//     return (\n//         <Dialogs addMessage={onAddMessageClick} updateNewMessageText={onMessageChange}\n//                  state={state} newMessageText={state.newMessageText}/>\n//     )\n// };\n\n\nlet mapStateToProps = (state) => {\n    return {\n        state: state.dialogPage,\n        newMessageText: state.dialogPage.newMessageText,\n    }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addMessage: (messageInput) => {\n            dispatch(addMessageActionCreator(messageInput));\n        }\n    }\n};\n\nexport default compose (\n    withAuthRedirect,\n    connect(mapStateToProps, mapDispatchToProps),\n) (Dialogs);\n\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\n//\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\n//\n// export default DialogsContainer;\n","import React, {Component, Suspense} from 'react';\nimport Navbar from './components/Navbar/Navbar'\nimport './App.css';\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport {Provider, connect} from \"react-redux\";\nimport store from \"./redux/redux-store\";\n\n\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.initializeApp();\n    };\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer store={this.props.store}/>\n                <Navbar store={this.props.store}/>\n                <div className='app-wrapper-content'>\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer store={this.props.store}/>}/>\n                    <Route path='/dialogs' render={() => <DialogsContainer store={this.props.store}/>}/>\n                    <Route path='/users' render={() =>\n                        <Suspense fallback={\"Loading...\"}>\n                            <UsersContainer store={this.props.store}/>\n                        </Suspense>\n                    }/>\n                    <Route path='/login' render={() => <Login store={this.props.store}/>}/>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nconst AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp})\n)(App);\n\nconst SocialNetworkApp = (props) => {\n    return <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Provider store={store}>\n                <AppContainer store={store}/>\n            </Provider>\n        </BrowserRouter>\n};\n\nexport default SocialNetworkApp;\n// export default compose(\n//     withRouter,\n//     connect(mapStateToProps, {initializeApp}))(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport './index.css';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from 'react-dom/';\nimport './index.css';\nimport SocialNetworkApp from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(<SocialNetworkApp/>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__WE9ql\",\"error\":\"FormsControl_error__eY5EU\",\"formSummaryError\":\"FormsControl_formSummaryError__3Uy6X\"};","import React from \"react\";\nimport preloader from '../../../assets/images/loader.gif';\n\nlet Preloader = () => {\n    return <div><img src={preloader}/></div>\n};\n\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"activeLink\":\"Navbar_activeLink__3etBE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","module.exports = __webpack_public_path__ + \"static/media/user.809d3e38.png\";","import * as axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {'API-KEY': 'fcacb08a-0280-492f-a832-bfb7851b80ad'}\n});\n\n\nexport let userAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {\n                return response.data\n            })\n    },\n    unfollowUser(userId) {\n        return instance.delete(`follow/${userId}`);\n    },\n    followUser(userId) {\n        return instance.post(`follow/${userId}`, {});\n    },\n    getProfile(userId) {\n        console.warn('Use profileAPI method instead');\n        return profileAPI.getProfile(userId);\n    }\n};\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId);\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId);\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status/`, {status: status});\n    },\n    savePhoto(photoFile) {\n        const formData = new FormData();\n        formData.append(\"image\", photoFile);\n        return instance.put(`profile/photo/`, formData, {\n            headers:\n                {'Content-Type': 'multipart/form-data'}\n        });\n    },\n    saveProfile(profile) {\n        return instance.put(`profile`, profile);\n    }\n};\n\nexport const authAPI = {\n    getMyAccount() {\n        return instance.get(`auth/me`);\n    },\n    login(email, password, rememberMe = false, captcha = null) {\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\n    },\n    logout() {\n        return instance.delete(`auth/login`);\n    }\n};\n\nexport const securityAPI = {\n    getCaptchaUrl() {\n        return instance.get(`security/get-captcha-url`);\n    }\n};"],"sourceRoot":""}